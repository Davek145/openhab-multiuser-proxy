# Server configuration for the openHAB multiuser proxy
# Requires the openhab-multiuser-proxy npm package (https://www.npmjs.com/package/openhab-multiuser-proxy)

# Extend nginx access log with user & org.
log_format oha '$remote_addr - [$ssl_client_s_dn_cn / $ssl_client_s_dn_ou] [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

server {
    listen                                    80;
    # Set the server name
    server_name                               admin.$server_name;
    return 301                                https://$server_name$request_uri;
}

map $ssl_client_s_dn $ssl_client_s_dn_cn {
    default "";
    ~(^|,)CN=(?<CN>[^,]+) $CN;
}

map $ssl_client_s_dn $ssl_client_s_dn_ou {
    default "";
    ~(^|,)OU=(?<OU>[^,]+) $OU;
}

# Unrestricted admin access.
server {
    listen                                    443 ssl http2;
    # Set the server name
    server_name                               admin.$server_name;
    
    proxy_ssl_server_name                     on;
    
    # rsa
    ssl_certificate                           /etc/ssl/openhab_rsa.crt;
    ssl_certificate_key                       /etc/ssl/openhab_rsa.pem;
    # ecc - disable you do not provide ecc cert
    #ssl_certificate                           /etc/ssl/openhab_ecc.crt;
    #ssl_certificate_key                       /etc/ssl/openhab_ecc.pem;

    # client certificate authentication
    ssl_client_certificate                    /etc/ssl/openhab_mtls_CA.crt;
    ssl_crl                                   /etc/ssl/openhab_mtls_CRL.pem;
    ssl_verify_client                         on;

    # Remove if using self-signed and are having trouble.
    add_header Strict-Transport-Security      "max-age=31536000; includeSubDomains; preload";

    # Cross-Origin Resource Sharing.
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow_Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE' always;
    
    # openHAB 3 api authentication
    add_header Set-Cookie                     X-OPENHAB-AUTH-HEADER=1;

# Root location
    location / {
        proxy_pass                            http://localhost:8080/;
        auth_request                          /auth/admin;
        include                               /etc/nginx/proxy-headers.conf;
    }

# Frontail
    location /frontail {
        limit_except GET {
           deny all;
        }
        proxy_pass                            http://localhost:9001/frontail;
        auth_request                          /auth/admin;
        include                               /etc/nginx/proxy-headers.conf;
    }
# Authorization endpoints.
    # Provides authorization whether client has admin privileges.
    location = /auth/admin {
        internal;
        proxy_pass                            http://localhost:8081/auth/admin;
        proxy_pass_request_body               off;
        proxy_set_header                      Content-Length "";
        proxy_set_header X-OPENHAB-USER       $ssl_client_s_dn_cn;
        proxy_set_header X-OPENHAB-ORG        $ssl_client_s_dn_ou;
    }

    access_log /var/log/nginx/$server_name.access.log      oha;
}
